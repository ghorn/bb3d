copts = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-Wconversion",
    "-fdiagnostics-color=always",
    "-std=c++17",
    "-Weffc++",
]

cc_library(
    name = "bb3d",
    srcs = [
        "bb3d/assert.cpp",
        "bb3d/assert.hpp",
        "bb3d/camera.cpp",
        "bb3d/camera.hpp",
        "bb3d/gl_error.cpp",
        "bb3d/gl_error.hpp",
        "bb3d/opengl_context.cpp",
        "bb3d/opengl_context.hpp",
        "bb3d/shader/colorlines.cpp",
        "bb3d/shader/colorlines.hpp",
        "bb3d/shader/freetype.cpp",
        "bb3d/shader/freetype.hpp",
        "bb3d/shader/cubemesh.cpp",
        "bb3d/shader/cubemesh.hpp",
        "bb3d/shader/gridmesh.cpp",
        "bb3d/shader/gridmesh.hpp",
        "bb3d/shader/lines.cpp",
        "bb3d/shader/lines.hpp",
        "bb3d/shader/shader.cpp",
        "bb3d/shader/shader.hpp",
    ],
    defines = [
        "BOOST_STACKTRACE_USE_BACKTRACE",
        #"BOOST_STACKTRACE_USE_ADDR2LINE",
        #"BOOST_STACKTRACE_LINK",
    ],
    linkopts = [
        "-ldl", "-lbacktrace", #"-lboost_stacktrace_backtrace",
        '-lfreetype',
        '-lglfw',
        '-lGLEW',
        '-lGL',
        '-lSOIL',
    ],
    visibility = ["//visibility:public"],
    copts = copts + ["-I/usr/include/freetype2"],
    deps = ["@bazel_tools//tools/cpp/runfiles"],
    data = [
        "bb3d/shader/colorlines.vs",
        "bb3d/shader/colorlines.fs",
        "bb3d/shader/freetype.vs",
        "bb3d/shader/freetype.fs",
        "bb3d/shader/gridmesh.vs",
        "bb3d/shader/gridmesh.fs",
        "bb3d/shader/cubemesh.vs",
        "bb3d/shader/cubemesh.fs",
        "bb3d/shader/lines.vs",
        "bb3d/shader/lines.fs",
    ],
)

cc_binary(
    name = "vis",
    srcs = [
        "example.cpp",
    ],
    visibility = ["//visibility:private"],
    deps = ['@bb3d//:bb3d'],
    linkopts = [
        '-lpthread',
    ],
    copts = copts,
)
